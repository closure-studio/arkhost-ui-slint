export enum GameState {
    Logging,
    Running,
    Faulted,
    Stopped,
    Captcha
}

export enum GameOperationRequestState {
    Idle,
    Requesting
}

export enum GameLogLoadState {
    NotLoaded,
    Loading,
    Loaded,
}

export enum GameLogLoadRequestType {
    Later,
    Former
}

export struct GameLogEntry {
    timestamp: string,
    content: string,
}

export enum GameOptionSaveState {
    Idle,
    Saving
}

export struct GameOptions {
    battle-maps: [string],
    enable-building-arrange: bool,
    enable-auto-battle: bool,
    ap-reserve: int,
    recruit-ignore-robot: bool,
    recruit-reserve: int,
}

export enum GameInfoViewType {
    DoctorInfo,
    Details,
    Settings,
    Logs,
}

export struct AvatarInfo {
    loaded: bool,
    avatar-image: image
}

export struct IllustInfo {
    loaded: bool,
    illust-image: image,
    pivot-factor-x: float,
    pivot-factor-y: float,
    offset-x: float,
    offset-y: float,
    scale-x: float,
    scale-y: float,
    size-x: float,
    size-y: float
}

export struct GameDetails {  
    loaded: bool,
    avatar: AvatarInfo,
    char-illust: IllustInfo,
    diamond: string,
    diamond-shard: string,
    gacha-ticket: string,
    tenfold-gacha-ticket: string,
    gold: string,
    max-ap: string,
    recruit-license: string,
    secretary: string,
    social-point: string
}

export struct GameInfo {
    id: string,
    doctor-name: string,
    doctor-level: string,
    doctor-serial: string,
    status-text: string,
    ap: string,
    battle-map: string,
    game-state: GameState,
    options: GameOptions,
    log-loaded: GameLogLoadState,
    logs: [GameLogEntry],
    request-state: GameOperationRequestState,
    save-state: GameOptionSaveState,
    active-view: GameInfoViewType,
    details: GameDetails
}