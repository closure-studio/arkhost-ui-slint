import { Palette, HorizontalBox, Button, GroupBox } from "std-widgets.slint";
import { GameInfo, BattleMap, GameOptionSaveState, BattleUpdateFields, BattleScreenshotsLoadState } from "../game-info.slint";
import { FontGlobals } from "../font-globals.slint";
import { ImageSelector } from "../components/image-carousel.slint";
import { Callbacks } from "../callbacks.slint";

component NoScreenshotIndicator inherits Rectangle {
    in property <string> text;
    VerticalLayout {
        alignment: center;
        HorizontalLayout {
            alignment: center;
            Image {
                source: @image-url("../images/emoji_doc_relax.png");
                image-fit: contain;
                width: 100px;
                height: 100px;
            }
        }    

        HorizontalLayout {
            alignment: center;
            Text {
                opacity: 0.7;
                text: text;
                vertical-alignment: center;
                horizontal-alignment: center;
            }
        }
    }
}

export component GameCardBattle inherits HorizontalLayout {
    in property <GameInfo> info;
    private property <bool> has-screenshots: info.current-battle-screenshot-series != "";
    private property <bool> has-pending-screenshots: 
        info.current-battle-screenshot-series != info.remote-battle-screenshot-series;
    callback select-map();
    alignment: center;
    VerticalLayout {
        alignment: stretch;
        spacing: 10px;
        Rectangle {
            background: Palette.alternate-background.darker(5%);
            border-radius: 10px;
            clip: true;
            HorizontalLayout {
                alignment: stretch;
                spacing: 10px;
                padding-left: 10px;
                padding-top: 7px;
                padding-bottom: 7px;
                Button {
                    text: @tr("选择作战关卡…");
                    clicked => {
                        select-map();
                    }
                    max-width: 130px;
                }

                if self.width > 400px: HorizontalLayout {
                    alignment: start;
                    spacing: 10px;
                    for map in info.selected-maps: Rectangle {
                        border-radius: self.height / 2;
                        background: @linear-gradient(15deg, #416f9c 0%, #2f669c 100%);
                        HorizontalLayout {
                            padding-left: 15px;
                            padding-right: 15px;
                            alignment: center;
                            spacing: 10px;
                            Text {
                                text: map.code-name != "" ? map.code-name : "N/A";
                                font-family: FontGlobals.closure-studio-logo;
                                font-weight: 450;
                                font-size: 15px;
                                color: whitesmoke;
                                vertical-alignment: center;
                            }

                            Text {
                                text: map.display-name;
                                font-family: FontGlobals.alphanumeric-text-sans;
                                font-size: 14px;
                                color: whitesmoke;
                                vertical-alignment: center;
                            }
                        }
                    }
                }
            }

            height: 48px;
            vertical-stretch: 0;
        }

        HorizontalLayout {
            alignment: stretch;
            spacing: 10px;
            private property <float> reference-image-width: info.battle-screenshots[0].width;
            private property <float> reference-image-height: info.battle-screenshots[0].height;
            private property <bool> is-wide:
                root.width > 400px
                && root.height > 300px
                && (root.width - 200px) / current-aspect-ratio > root.height - 100px;
            private property <float> default-aspect-ratio: 16 / 9;
            private property <float> current-aspect-ratio: 
                (has-screenshots && reference-image-width > 0 && reference-image-height > 0) 
                    ? reference-image-width / reference-image-height 
                    : default-aspect-ratio;
            if is-wide: Rectangle {
                if has-screenshots: Image {
                    source: info.battle-screenshots[image-selector.current-index];
                    image-fit: contain;
                    image-rendering: smooth;
                    horizontal-alignment: center;
                    vertical-alignment: center;

                    width: parent.width;
                    height: parent.height;
                    x: 0;
                    y: 0;
                }

                if !has-screenshots: NoScreenshotIndicator {
                    states [
                        no-remote-screenshot when !has-screenshots && !has-pending-screenshots: {
                            text: @tr("这里没有作战截图");
                        }

                        not-loaded when !has-screenshots: {
                            text: @tr("还没有加载作战截图");
                        }
                    ]
                }

                preferred-width: self.height * current-aspect-ratio;
                horizontal-stretch: 0;
            }
            Rectangle {
                border-radius: 10px;
                clip: true;
                background: Palette.alternate-background.darker(5%);
                min-width: 180px;
                preferred-width: 200px;
                max-width: is-wide ? 220px : 1000px;
                VerticalLayout {
                    padding: 5px;
                    spacing: 10px;
                    if has-pending-screenshots: Button {
                        // initial value
                        enabled: true;
                        clicked => {
                            Callbacks.load-screenshots(info.id);
                        }
                        states [
                            busy when info.battle-screenshots-loading == BattleScreenshotsLoadState.Loading: {
                                enabled: false;
                                text: @tr("正在加载作战截图……");
                            }
                            not-loaded when !has-screenshots && has-pending-screenshots: {
                                enabled: true;
                                text: @tr("加载作战截图");
                            }
                            has-new when has-pending-screenshots: {
                                enabled: true;
                                text: @tr("加载新的作战截图");
                            }
                        ]
                    }
                    if !is-wide && !has-screenshots: NoScreenshotIndicator {
                        states [
                            no-remote-screenshot when !has-screenshots && !has-pending-screenshots: {
                                text: @tr("这里没有作战截图");
                            }
    
                            not-loaded when !has-screenshots: {
                                text: @tr("还没有加载作战截图");
                            }
                        ]
                    }
                    image-selector := ImageSelector {
                        aspect-ratio: current-aspect-ratio;
                        images: info.battle-screenshots;
                        focus-zooming: is-wide ? 1.05 : 1;
                    }
                }
            }
        }

        width: clamp(root.width - 20px, 300px, 1000px);
    }
}
