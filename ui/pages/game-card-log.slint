import { GameOptions, GameInfo, GameLogLoadRequestType, GameLogLoadState } from "../game-info.slint";
import { ListView , HorizontalBox, Button, ScrollView, VerticalBox, Spinner, Palette } from "std-widgets.slint";
import { FontGlobals } from "../font-globals.slint";

component GameCardLogEntryHeader inherits HorizontalLayout {
    in property <string> timestamp;
    in property <string> attributes;
    spacing: 5px;
    alignment: start;

    Text {
        text: timestamp;
        height: 18px;
        min-width: 104px;
        font-size: 14px;
        font-family: FontGlobals.alphanumeric-text-sans;
        color: Palette.foreground.transparentize(50%);
        horizontal-alignment: left;
    }

    if attributes != "": Text {
        text: attributes;
        color: #dd8800;
        height: 18px;
        font-size: 14px;
        font-family: "Courier New";
        horizontal-alignment: left;
    }
}

component GameCardLogEntry inherits Rectangle {
    in property <string> timestamp;
    in property <string> attributes;
    in property <string> content;

    HorizontalLayout {
        spacing: 5px;
        alignment: start;

        GameCardLogEntryHeader {
            timestamp: timestamp;
            attributes: attributes;
        }

        Text {
            text: content;
            font-size: 14px;
            horizontal-alignment: left;
            wrap: word-wrap;
        }
    }
}

component GameCardLogEntryCompact inherits Rectangle {
    in property <string> timestamp;
    in property <string> attributes;
    in property <string> content;

    VerticalLayout {
        padding-top: 3px;
        padding-bottom: 3px;
        alignment: start;

        GameCardLogEntryHeader {
            timestamp: timestamp;
            attributes: attributes;
        }

        HorizontalLayout {
            alignment: stretch;
            padding-left: 5px;

            Text {
                text: content;
                font-size: 14px;
                horizontal-alignment: left;
                vertical-alignment: top;
                wrap: word-wrap;
            }
        }
    }
}

export component GameCardLog inherits VerticalLayout {
    in property <GameInfo> info;
    private property <bool> log-loading: false;

    callback load-logs(string, GameLogLoadRequestType);

    spacing: 10px;
    padding-bottom: 5px;
    
    HorizontalLayout {
        spacing: 10px;

        load-button := Button {
            enabled: !log-loading;
            clicked => {
                if info.log-loaded == GameLogLoadState.NotLoaded {
                    load-logs(info.id, GameLogLoadRequestType.Later);
                } else if info.log-loaded == GameLogLoadState.Loaded {
                    load-logs(info.id, GameLogLoadRequestType.Former);
                }
            }
        }
    }

    if self.width >= 550px: ListView {
        for log-entry in info.logs: GameCardLogEntry {
            timestamp: log-entry.timestamp;
            attributes: log-entry.attributes;
            content: log-entry.content;
        }

        cache-rendering-hint: true;
    }

    if self.width < 550px: ListView {
        for log-entry in info.logs: GameCardLogEntryCompact {
            timestamp: log-entry.timestamp;
            attributes: log-entry.attributes;
            content: log-entry.content;
        }

        cache-rendering-hint: true;
    }

    states [
        not-loaded when info.log-loaded == GameLogLoadState.NotLoaded: {
            load-button.text: @tr("加载日志");
            log-loading: false;
        }
        loading when info.log-loaded == GameLogLoadState.Loading: {
            load-button.text: @tr("正在加载日志……");
            log-loading: true;
        }
        loaded when info.log-loaded == GameLogLoadState.Loaded: {
            load-button.text: @tr("加载更早的日志");
            log-loading: false;
        }
    ]
}